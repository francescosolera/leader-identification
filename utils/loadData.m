function [myF, clusters, video_par] = loadData(source, snd_parameter)
% This function should provide an interface to access data from different
% sources. Data could be read from a file or synthetic data may have been
% generated by another matlab function. The source is toggled by an input
% parameter named <source>.
% Either way the output syntax must be the same regardless of the source.

% OUTPUT SYNTAX
% 1) informations about the trajectories
%    myF = [frame_ID pedestrian_ID pos_x pos_z pos_y v_x v_z v_y]
% 2) informations about the clusters
%    clusters = cell array of structs.members = [...]
% 3) informations about the simulation/video
%    video_par =    video_par.videoObj
%                   video_par.length
%                   video_par.frame_rate
%                   video_par.downsampling
%                   video_par.xMin
%                   video_par.xMax
%                   video_par.yMin
%                   video_par.yMax

%% GENERATE TRAJECTORIES
if strcmpi(source, 'generate trajectories')
    % call traj function for synthetic trajectories generation 
    [myF, clusters, video_par] = traj(str2double(snd_parameter));

%% READ TRAJECTORIES FROM FILE
elseif strcmpi(source, 'load from file')
    % search for trajectories.txt, clusters.txt and video_par.mat in
    % dirName and load data from them.
    if exist([snd_parameter, '/trajectories.txt'], 'file')
        myF = importdata([snd_parameter, '/trajectories.txt']);
    else
        error([snd_parameter, '/trajectories.txt doesn''t exist!']);
    end
    
    if exist([snd_parameter, '/clusters.txt'], 'file')
        clusters = {};
        fid = fopen([snd_parameter, '/clusters.txt']);
        tline = fgetl(fid);
        while ischar(tline)
            myCluster.members = str2num(tline);
            clusters = [clusters, myCluster];
            tline = fgetl(fid);
        end
        fclose(fid);
    else
        error([snd_parameter, '/clusters.txt doesn''t exist!']);
    end
    
    if exist([snd_parameter, '/video_par.mat'], 'file')
        load([snd_parameter, '/video_par.mat']);
    else
        error([snd_parameter, '/video_par.mat doesn''t exist!']);
    end
    
    % clip video to desired frames
    %video_par.length = 1200;
    %myF = myF(myF(:, 1) <= video_par.length, :);
    
else
    error('The input source must be either ''generate trajectories'' or ''load from file''');
end